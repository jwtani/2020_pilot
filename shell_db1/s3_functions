# -*-Shell-script-*-
#
# s3_functions This file contains functions that are called when using Amazon S3
#       in shell scripts in the /home/jw/data-linkage directory.
#

PATH="/sbin:/usr/sbin:/usr/local/bin:/bin:/usr/bin"
export PATH

# AmazonS3アップロード
function s3upload() {
    local bucket=$1
    local key=$2
    local data=$3
    local hash_value
    local return_code=0

    # エラー：引数の数が３以外
    if [ $# -ne 3 ]; then
        echo ERROR: Invalid argument count. Specify four arguments. \<bucket\> \<key\> \<data\>
        return 1
    fi

    # エラー：アップロード対象が存在しない
    if [ ! -e ${data} ]; then
        echo ERROR: ${data} is not found. Please specify a valid file path.
        return 1
    fi

    # 対象ファイルのMD5ハッシュ値を取得
    hash_value=`openssl md5 -binary ${data} | base64`

    # エラー：MD5ハッシュ値取得に失敗
    if [ $? -ne 0 ]; then
        echo ERROR: Faild to get ${data} md5checksum.
        return 1
    fi

    # S3へアップロード
    # エラーのみ出力
    aws s3api put-object --bucket ${bucket} --key ${key} --body ${data} \
        --content-md5 ${hash_value} \
        --metadata md5checksum=${hash_value} \
        2>&1 1>/dev/null

    return $?
}

# AmazonS3アップロード（AES256暗号化）
s3upload_aes256() {
    local bucket=$1
    local key=$2
    local data=$3
    local pass=$4
    local debug

    # エラー：引数の数が３以外
    if [ $# -ne 4 ]; then
        echo ERROR: Invalid argument count. Specify four arguments. \<bucket\> \<key\> \<data\> \<pass\>
        return 1
    fi

    # エラー：アップロード対象が存在しない
    if [ ! -e ${data} ]; then
        echo ERROR: ${data} is not found. Please specify a valid file path.
        return 1
    fi

    # エラーのみ出力
    # --debugをつけると詳細エラー出力
    debug=""
    #debug="--debug"
    aws s3api put-object --bucket ${bucket} --key ${key} --body ${data} \
        --content-md5 `openssl md5 -binary ${data} | base64` \
        --sse-customer-algorithm AES256 \
        --sse-customer-key ${pass} ${debug} 2>&1 1>/dev/null

    return $?
}

# AmazonS3ダウンロード
function s3download() {
    echo This is Amazon S3 download function. [Coming soon]
    return 0
}
